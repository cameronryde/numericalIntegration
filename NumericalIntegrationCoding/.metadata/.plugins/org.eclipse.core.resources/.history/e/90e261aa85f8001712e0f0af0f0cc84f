package numericalIntegration;

public class Midpoint {
	
	double f(double[] coeffs, double x) {
		double total = 0;
		
		return (coeffs[0]*Math.pow(x, 5))+(coeffs[1]*Math.pow(x, 4))+
				(coeffs[2]*Math.pow(x, 3))+(coeffs[3]*Math.pow(x, 2))+
				(coeffs[4]*x)+coeffs[5];
	}
	
	public double getMidpoint(double a, double b, int n, double[] coeffs) {
		//Rect Width = b-a/n
		double rectWidth = (b-a)/n;
		double total = 0;
		
		double x = a + (.5 * rectWidth);
		
		for(int i =0; i < n; i++) {
			total = total + ((f(coeffs, x))/2); 
			x = x + rectWidth;
		}
		
		
		
		return total;
	}
}
