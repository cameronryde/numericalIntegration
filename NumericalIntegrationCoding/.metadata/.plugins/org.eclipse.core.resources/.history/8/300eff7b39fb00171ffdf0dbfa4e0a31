package numericalIntegration;

public class Simpsons {
	
	public static double f(double[] coeffs, double x) {
		//our formula that was given
		//f(x)=Ax^5 + Bx^4 + Cx^3 + Dx^2 + Ex + F
		return (coeffs[0]*Math.pow(x, 5))+(coeffs[1]*Math.pow(x, 4))+
				(coeffs[2]*Math.pow(x, 3))+(coeffs[3]*Math.pow(x, 2))+
				(coeffs[4]*x)+coeffs[5];
	}


	public static double getSimps(double a, double b, int n, double[] coeffs) {
		
		
		//return ((b-a)/6)*(f(coeffs, a) + 4*f(coeffs, (a+b)/2)+ f(coeffs, b));
		
		double sum2= 0;
		double sum4 = 0;
		double sum0N;
		double x = a;
		double h = (b-a)/(3);
		
		
		for(int i = 0; i < n; i++) {
			if(i % 2 == 0) {
				sum4 += 4*f(coeffs, x);
			}else {
				sum2 += 2*f(coeffs, x);
			}
			
			x += h;
		}
		
		return sum4+ sum2 + f(coeffs, a) + f(coeffs, x+h);
		
	}
}
